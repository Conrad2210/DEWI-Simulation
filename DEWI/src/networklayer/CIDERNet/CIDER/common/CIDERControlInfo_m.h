//
// Generated file, do not edit! Created by nedtool 4.6 from src/networklayer/CIDERNet/CIDER/common/CIDERControlInfo.msg.
//

#ifndef _CIDERCONTROLINFO_M_H_
#define _CIDERCONTROLINFO_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    using namespace std;
   
// }}

/**
 * Class generated from <tt>src/networklayer/CIDERNet/CIDER/common/CIDERControlInfo.msg:22</tt> by nedtool.
 * <pre>
 * message CIDERControlInfo
 * {
 *     bool broadcast;
 * 
 * 
 * }
 * </pre>
 */
class CIDERControlInfo : public ::cMessage
{
  protected:
    bool broadcast_var;

  private:
    void copy(const CIDERControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CIDERControlInfo&);

  public:
    CIDERControlInfo(const char *name=NULL, int kind=0);
    CIDERControlInfo(const CIDERControlInfo& other);
    virtual ~CIDERControlInfo();
    CIDERControlInfo& operator=(const CIDERControlInfo& other);
    virtual CIDERControlInfo *dup() const {return new CIDERControlInfo(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual bool getBroadcast() const;
    virtual void setBroadcast(bool broadcast);
};

inline void doPacking(cCommBuffer *b, CIDERControlInfo& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CIDERControlInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef _CIDERCONTROLINFO_M_H_

