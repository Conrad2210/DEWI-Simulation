//
// Generated file, do not edit! Created by nedtool 4.6 from src/networklayer/CIDERNet/CIDER/common/CIDERFrame.msg.
//

#ifndef _CIDERFRAME_M_H_
#define _CIDERFRAME_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    using namespace std;
    #include "MACAddress.h"
// }}

/**
 * Class generated from <tt>src/networklayer/CIDERNet/CIDER/common/CIDERFrame.msg:26</tt> by nedtool.
 * <pre>
 * packet CIDERFrame
 * {
 *     MACAddress address;
 *     double rxPower;
 *     int nodeDegree;
 *     double txPower;
 * }
 * </pre>
 */
class CIDERFrame : public ::cPacket
{
  protected:
    MACAddress address_var;
    double rxPower_var;
    int nodeDegree_var;
    double txPower_var;

  private:
    void copy(const CIDERFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CIDERFrame&);

  public:
    CIDERFrame(const char *name=NULL, int kind=0);
    CIDERFrame(const CIDERFrame& other);
    virtual ~CIDERFrame();
    CIDERFrame& operator=(const CIDERFrame& other);
    virtual CIDERFrame *dup() const {return new CIDERFrame(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual MACAddress& getAddress();
    virtual const MACAddress& getAddress() const {return const_cast<CIDERFrame*>(this)->getAddress();}
    virtual void setAddress(const MACAddress& address);
    virtual double getRxPower() const;
    virtual void setRxPower(double rxPower);
    virtual int getNodeDegree() const;
    virtual void setNodeDegree(int nodeDegree);
    virtual double getTxPower() const;
    virtual void setTxPower(double txPower);
};

inline void doPacking(cCommBuffer *b, CIDERFrame& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CIDERFrame& obj) {obj.parsimUnpack(b);}


#endif // ifndef _CIDERFRAME_M_H_

