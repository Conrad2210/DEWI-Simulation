//
// Generated file, do not edit! Created by opp_msgc 4.4 from src/linklayer/contract/IEEE802154e/Ieee802154eMacPhyPrimitives.msg.
//

#ifndef _IEEE802154EMACPHYPRIMITIVES_M_H_
#define _IEEE802154EMACPHYPRIMITIVES_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "Ieee802154eConst.h"
#include "Ieee802154eEnum.h"
#include "Ieee802154eField.h"
// }}



/**
 * Class generated from <tt>src/linklayer/contract/IEEE802154e/Ieee802154eMacPhyPrimitives.msg</tt> by opp_msgc.
 * <pre>
 * message Ieee802154eMacPhyPrimitives
 * {
 *     short status @enum(PHYenum);
 *     uint8_t pibAttribute;
 *     PHY_PIB pibAttributeValue;
 *     
 *     
 *     uint8_t psduLength;   
 *           
 *     
 *     double bitRate;
 *     short additional=-1; 
 * 
 *     unsigned char energyLevel;
 * 
 *     int channelNumber; 		
 * 		
 * 		
 * 		
 * 		
 * }
 * </pre>
 */
class Ieee802154eMacPhyPrimitives : public ::cMessage
{
  protected:
    short status_var;
    uint8_t pibAttribute_var;
    PHY_PIB pibAttributeValue_var;
    uint8_t psduLength_var;
    double bitRate_var;
    short additional_var;
    unsigned char energyLevel_var;
    int channelNumber_var;

  private:
    void copy(const Ieee802154eMacPhyPrimitives& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Ieee802154eMacPhyPrimitives&);

  public:
    Ieee802154eMacPhyPrimitives(const char *name=NULL, int kind=0);
    Ieee802154eMacPhyPrimitives(const Ieee802154eMacPhyPrimitives& other);
    virtual ~Ieee802154eMacPhyPrimitives();
    Ieee802154eMacPhyPrimitives& operator=(const Ieee802154eMacPhyPrimitives& other);
    virtual Ieee802154eMacPhyPrimitives *dup() const {return new Ieee802154eMacPhyPrimitives(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual short getStatus() const;
    virtual void setStatus(short status);
    virtual uint8_t getPibAttribute() const;
    virtual void setPibAttribute(uint8_t pibAttribute);
    virtual PHY_PIB& getPibAttributeValue();
    virtual const PHY_PIB& getPibAttributeValue() const {return const_cast<Ieee802154eMacPhyPrimitives*>(this)->getPibAttributeValue();}
    virtual void setPibAttributeValue(const PHY_PIB& pibAttributeValue);
    virtual uint8_t getPsduLength() const;
    virtual void setPsduLength(uint8_t psduLength);
    virtual double getBitRate() const;
    virtual void setBitRate(double bitRate);
    virtual short getAdditional() const;
    virtual void setAdditional(short additional);
    virtual unsigned char getEnergyLevel() const;
    virtual void setEnergyLevel(unsigned char energyLevel);
    virtual int getChannelNumber() const;
    virtual void setChannelNumber(int channelNumber);
};

inline void doPacking(cCommBuffer *b, Ieee802154eMacPhyPrimitives& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Ieee802154eMacPhyPrimitives& obj) {obj.parsimUnpack(b);}


#endif // _IEEE802154EMACPHYPRIMITIVES_M_H_
